
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp GRAVE  &kp N1  &kp N2        &kp N3     &kp N4  &kp N5               &none                                                                       &none  &kp N6     &kp N7     &kp N8   &kp N9    &kp N0     &none
   &kp TAB   &kp Q   &kp W         &kp E      &kp R   &kp T            &kp LBKT                                                                   &kp EQUAL   &kp Y      &kp U      &kp I    &kp O     &kp P  &kp BSLH
     &none   &kp A   &kp S         &kp D      &kp F   &kp G            &kp RBKT  &kp LSHFT  &kp ESCAPE                       &kp LGUI  &kp RSHFT  &kp MINUS   &kp H      &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
 &kp LCTRL   &kp Z   &kp X         &kp C      &kp V   &kp B                                   &kp LALT                  &kp RIGHT_ALT                         &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH     &none
     &none   &none   &none  &kp LEFT_ALT  &kp LSHFT                    &kp BSPC      &mo 2   &kp LCTRL                      &kp RCTRL  &kp ENTER  &kp SPACE          &kp RSHFT      &none    &none     &none     &none
            >;
        };

        layer_mod {
            bindings = <
     &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                               &none  &rgb_ug RGB_TOG  &bl BL_ON  &bl BL_OFF  &bl BL_INC  &bl BL_DEC   &none
     &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader            &none      &none      &kp UP       &none       &none   &none
     &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5   &none  &bt BT_CLR                      &trans  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5            &none   &kp LEFT    &kp DOWN   &kp RIGHT       &none   &none
     &none         &none         &none         &none         &none         &none                                                 &none                       &none                                               &tog 1      &none       &none       &none       &none   &none
 &kp LCTRL         &none         &none      &kp LALT        &kp F2                                      &bl BL_INC   &mo 2       &none                  &bl BL_TOG       &none                   &none                       &none       &none       &none       &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &kp ESC        &kp F1        &kp F2      &kp F3         &kp F4  &kp F5               &none                                                                &none       &kp F6         &kp F7         &kp F8       &kp F9       &kp F10  &trans
 &kp TAB  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans              &trans                                                               &trans  &kp PAGE_UP  &kp PAGE_DOWN         &kp UP    &kp LC(O)        &trans  &trans
   &none        &trans        &trans   &kp LC(C)      &kp LC(V)  &trans              &trans  &out OUT_USB  &out OUT_BLE                  &tog 1  &trans   &trans     &kp HOME       &kp LEFT       &kp DOWN    &kp RIGHT        &trans  &trans
  &trans        &trans        &trans   &kp LG(C)      &kp LG(V)  &trans                                    &out OUT_TOG                  &trans                       &kp END      &kp LC(M)  &kp LC(COMMA)  &kp LC(DOT)  &kp LC(FSLH)  &trans
  &trans        &trans        &trans      &trans         &trans                    &kp LWIN        &trans        &trans                  &trans  &trans  &kp DEL                      &trans          &none        &none         &none   &none
            >;
        };

    };
};
